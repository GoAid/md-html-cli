name: Release

on:
  push:
    tags: [ 'v*' ]

jobs:
  create_release:
    name: Pre-Build
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: create_release
    strategy:
      matrix:
        GOOS: [windows, linux]
        GOARCH: [386, amd64]
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.17
        id: go

      - name: Set Envs
        id: set_envs
        run: |
          echo "GOEXE=$(GOOS=${{ matrix.GOOS }} GOARCH=${{ matrix.GOARCH }} go env GOEXE)" >> $GITHUB_ENV
          if [ -f go.mod ]; then
            echo "MODULE_NAME=$(go mod why | head -1 | sed 's/.*\///')" >> $GITHUB_ENV
          else
            echo "MODULE_NAME=${GITHUB_REPOSITORY#*/}" >> $GITHUB_ENV
          fi

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Get dependencies
        run: |
          go get -v -t -d ./...
          if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
          fi

      - name: Build
        run: GOOS=${{ matrix.GOOS }} GOARCH=${{ matrix.GOARCH }} go build -v -ldflags="-s -w" .

      - name: Archive
        run: 7z a ${{ env.MODULE_NAME }}_${{ matrix.GOOS }}_${{ matrix.GOARCH }}.zip ${{ env.MODULE_NAME }}${{ env.GOEXE }}

      - name: Upload
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ${{ env.MODULE_NAME }}_${{ matrix.GOOS }}_${{ matrix.GOARCH }}.zip
          asset_name: ${{ env.MODULE_NAME }}_${{ matrix.GOOS }}_${{ matrix.GOARCH }}.zip
          asset_content_type: application/zip
