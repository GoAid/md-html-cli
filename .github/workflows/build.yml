name: Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        GOOS: [windows, linux]
        GOARCH: [386, amd64]
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.17
        id: go

      - name: Set Envs
        id: set_envs
        run: |
          echo "GITHUB_SHA_7=$(expr substr ${{ github.sha }} 1 7)" >> $GITHUB_ENV
          echo "GOEXE=$(GOOS=${{ matrix.GOOS }} GOARCH=${{ matrix.GOARCH }} go env GOEXE)" >> $GITHUB_ENV
          if [ -f go.mod ]; then
            echo "MODULE_NAME=$(go mod why | head -1 | sed 's/.*\///')" >> $GITHUB_ENV
          else
            echo "MODULE_NAME=${GITHUB_REPOSITORY#*/}" >> $GITHUB_ENV
          fi

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Get dependencies
        run: |
          go get -v -t -d ./...
          if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
          fi

      - name: Build
        run: GOOS=${{ matrix.GOOS }} GOARCH=${{ matrix.GOARCH }} go build -v -ldflags="-s -w" .

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.MODULE_NAME }}_${{ env.GITHUB_SHA_7 }}_${{ matrix.GOOS }}_${{ matrix.GOARCH }}${{ env.GOEXE }}
          path: ${{ env.MODULE_NAME }}${{ env.GOEXE }}
